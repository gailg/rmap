sys.time()
Sys.time()
library(rmap)
x = read.csv(
file = "data_set_score_statistics.csv",
stringsAsFactors = FALSE)
head(x)
e = x$e
t = x$t
risk_model_1 = list(
r = x$r_1,
Lambda_outcome = x$Lambda_outcome_1,
Lambda_mortality = x$Lambda_mortality_1,
groupings = list(
risk = list(k = x$k_1),
missing = list(K = 4, variable = x$w)))
risk_model_2 = list(
r = x$r_2,
Lambda_outcome = x$Lambda_outcome_2,
Lambda_mortality = x$Lambda_mortality_2,
groupings = list(
risk = list(K = 4),
missing = list(K = 4, variable = x$w)))
ss = score_statistics(e, t,
risk_model_1 = risk_model_1,
risk_model_2 = risk_model_2)
ss
sr = standardized_residuals(e, t,
risk_model_1 = risk_model_1,
risk_model_2 = risk_model_2)
plot(sr, grouping_name = "risk")
plot_pars = list(x_max = 0.17,
y_max = 9,
y_max_ad = 0.33,
xlab = "Risk (%)")
plot(sr, grouping_name = "risk", plot_pars)
risk_model_2 = list(
r = x$r_2,
Lambda_outcome = x$Lambda_outcome_2,
Lambda_mortality = NULL,
groupings = list(
risk = list(K = 4),
missing = list(K = 4, variable = x$w)))
ss_no_mortality = score_statistics(e, t,
risk_model_1 = risk_model_1,
risk_model_2 = risk_model_2)
ss_no_mortality
sr_no_mortality = standardized_residuals(e, t,
risk_model_1 = risk_model_1,
risk_model_2 = risk_model_2)
plot(sr_no_mortality, grouping_name = "risk")
list_of_risk_models = list(
risk_model_1 = x$r_1,
risk_model_2 = x$r_2)
K = 4
risk_quantile_boxplots(list_of_risk_models, K)
risk_quantile_boxplots(list_of_risk_models, K, risk_max = 0.6)
x = read.csv(
file = "datafRandomSample.csv",
stringsAsFactors = FALSE)
head(x)
my_e = x$e
my_t = x$t
my_r = x$r
my_design = "randomSample"
my_riskGroup = list(k = x$k)
my_rSummary = "mean"
my_bootstrap = 30
rv = riskValidate(
e = my_e, t = my_t, r = my_r, design = my_design,
riskGroup = my_riskGroup, rSummary = my_rSummary,
bootstrap = my_bootstrap, rvpar = rvparFn())
options(width = 120)
options(digits = 3)
rv
rv1 = riskValidate(
e = my_e, t = my_t, r = my_r, design = my_design,
riskGroup = list(K = 5), rSummary = my_rSummary,
bootstrap = my_bootstrap, rvpar = FALSE)
rv2 = riskValidate(
e = my_e, t = my_t, r = my_r, design = my_design,
riskGroup = list(K = 3), rSummary = my_rSummary,
bootstrap = my_bootstrap, rvpar = FALSE)
attributeDiagram(
rvs = list(rv1, rv2),
rvpar = rvparFn(col = c("blue", "red"),
comment = "rv1 and rv2"))
set.seed(1)
sampleData = df_randomSample_r1_r2(NTotal = 500)
epsilon = nrow(sampleData)^(-1/3)
tStar = 10
rvu = riskValidateUngrouped(
e = sampleData$e, t = sampleData$t, r = sampleData$r1,
design = "randomSample",
riskGroup = list(
ungrouped = list(epsilon = epsilon, tStar = tStar)),
bootstrap = 20, rvpar = rvparFn(),
multicore = FALSE, verbose = FALSE)
rvu
epsilon = 2 * nrow(sampleData)^(-1/3)
tStar = 10
rvu = riskValidateUngrouped(
e = sampleData$e, t = sampleData$t, r = sampleData$r1,
design = "randomSample",
riskGroup = list(
ungrouped = list(epsilon = epsilon, tStar = tStar)),
bootstrap = 20, rvpar = rvparFn(),
multicore = FALSE, verbose = FALSE)
rvu
str(rvu)
rvu$est
names(rvu)
names(rvu$PNN)
rvu$PNN$est
str(rvu)
rvu$PNN$confBand
str(rvu)
plot(rvu$PNN$est[, 1])
plot(rvu$PNN$est[, 2])
plot(rvu$PNN$confBand[, 1])
plot(rvu$PNN$confBand[, 2])
epsilon = nrow(sampleData)^(-1/3)
tStar = 10
rvu = riskValidateUngrouped(
e = sampleData$e, t = sampleData$t, r = sampleData$r1,
design = "randomSample",
riskGroup = list(
ungrouped = list(epsilon = epsilon, tStar = tStar)),
bootstrap = 20, rvpar = rvparFn(),
multicore = FALSE, verbose = FALSE)
rvu
help(IAD)
IAD(rvu)
str(rvu)
str(rvu$PNN)
with(rvu$PNN, plot(rho, piHatNN))
rho = rvu$PNN[, "rho"]
rho = rvu$PNN$est[, "rho"]
piHatNN = rvu$PNN$piHatNN
plot(rho, piHatNN)
rho
data.frame(rho, piHatNN)
piHatNN
str(rvu$PNN)
piHatNN = rvu$PNN$[, "piHatNN"]
piHatNN = rvu$PNN[, "piHatNN"]
piHatNN = rvu$PNN$est[, "piHatNN"]
data.frame(rho, piHatNN)
plot(rho, piHatNN)
names(rvu$PNN$est)
names(rvu$PNN)
str(rvu$PNN$confBand)
lower = rvu$PNN$confBand[, 1]
upper = rvu$PNN$confBand[, 2]
lower = rvu$PNN$confBand[, 1]
upper = rvu$PNN$confBand[, 2]
data.frame(rho, piHatNN, lower, upper)
plot(rho, piHatNN)
line(rho, upper, add = TRUE, col = "red")
points(rho, upper, add = TRUE, col = "red")
points(rho, lower, add = TRUE, col = "blue")
plot(rho, piHatNN, xlim = c(0, 1), ylilm = c(0, 1))
plot(rho, piHatNN, xlim = c(0, 1), ylim = c(0, 1))
points(rho, upper, add = TRUE, col = "red")
points(rho, lower, add = TRUE, col = "blue")
set.seed(1)
sampleData = df_randomSample_r1_r2(NTotal = 500)
epsilon = nrow(sampleData)^(-1/3)
tStar = 10
rvu = riskValidateUngrouped(
e = sampleData$e, t = sampleData$t, r = sampleData$r1,
design = "randomSample",
riskGroup = list(
ungrouped = list(epsilon = epsilon, tStar = tStar)),
bootstrap = 20, rvpar = rvparFn(),
multicore = FALSE, verbose = FALSE)
rvu
set.seed(1)
sampleData = df_randomSample_r1_r2(NTotal = 500)
epsilon = nrow(sampleData)^(-1/3)
tStar = 10
rvu = riskValidateUngrouped(
e = sampleData$e, t = sampleData$t, r = sampleData$r1,
design = "randomSample",
riskGroup = list(
ungrouped = list(epsilon = epsilon, tStar = tStar)),
bootstrap = 20, rvpar = rvparFn(),
multicore = FALSE, verbose = FALSE)
Sys.time()
Sys.time()
library(rmap)
x = read.csv(
file = "data_set_score_statistics.csv",
stringsAsFactors = FALSE)
head(x)
